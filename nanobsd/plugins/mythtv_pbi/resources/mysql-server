#!/bin/sh
#
#

# PROVIDE: mysql
# REQUIRE: LOGIN
# KEYWORD: shutdown

#
# Add the following line to /etc/rc.conf to enable mysql:
# mysql_enable (bool):  Set to "NO" by default.
#                       Set it to "YES" to enable MySQL.
# mysql_limits (bool):  Set to "NO" by default.
#                       Set it to yes to run `limits -e -U mysql`
#                       just before mysql starts.
# mysql_dbdir (str):    Default to "/var/db/mysql"
#                       Base database directory.
# mysql_pidfile (str):  Custum PID file path and name.
#                       Default to "${mysql_dbdir}/${hostname}.pid".
# mysql_args (str):     Custom additional arguments to be passed
#                       to mysqld_safe (default empty).
#

. /etc/rc.subr

name="mysql"
rcvar=mysql_enable

load_rc_config $name

: ${mysql_enable="NO"}
: ${mysql_limits="NO"}
: ${mysql_dbdir="/usr/pbi/mythtv-`uname -m`/_MythDatabase"}

mysql_user="root"
mythtv_home="/usr/pbi/mythtv-`uname -m`"
mysql_limits_args="-e -U ${mysql_user}"
pidfile=${mysql_pidfile:-"/var/run/mysql.pid"}
command="/usr/sbin/daemon"
command_args="-c -f /usr/pbi/mythtv-`uname -m`/bin/mysqld_safe --defaults-extra-file=${mysql_dbdir}/my.cnf --user=${mysql_user} --datadir=${mysql_dbdir} --pid-file=${pidfile} ${mysql_args}"
procname="/usr/pbi/mythtv-`uname -m`/libexec/mysqld"
start_precmd="${name}_prestart"
start_postcmd="${name}_poststart"
stop_precmd="${name}_prestop"
mysql_install_db="/usr/pbi/mythtv-`uname -m`/bin/mysql_install_db"
mysql_install_db_args="--basedir=/usr/pbi/mythtv-`uname -m` --datadir=${mysql_dbdir} --force"

mysql_create_auth_tables()
{
        eval $mysql_install_db $mysql_install_db_args >/dev/null 2>/dev/null
        [ $? -eq 0 ] && chown -R ${mysql_user}:${mysql_user} ${mysql_dbdir}
}

mysql_prestart()
{
        if [ ! -d "${mysql_dbdir}/mysql/." ]; then
                mysql_create_auth_tables || return 1
        fi
        if checkyesno mysql_limits; then
                eval `/usr/bin/limits ${mysql_limits_args}` 2>/dev/null
        else
                return 0
        fi
        /sbin/ldconfig -m /usr/pbi/mythtv-`uname -m`/lib
}

mysql_poststart()
{
        local timeout=15
        while [ ! -f "${pidfile}" -a ${timeout} -gt 0 ]; do
                timeout=$(( timeout - 1 ))
                sleep 1
        done
        if [ ! -d "${mysql_dbdir}/mythconverge/." ]; then
                (cd ${mysql_dbdir}; /usr/pbi/mythtv-`uname -m`/bin/mysql < ${mysql_dbdir}/mc.sql) || return 1
        fi
        /usr/pbi/mythtv-`uname -m`/bin/mysql_upgrade

# Figure out which Myth Service to start, Mythbackend only needs mysql, not Xvfb, x11vnc, or fluxbox
# Values from etc/mythtv.conf
# 1 = mythtv-setup 2 = mythtvbackend 3 = mythttvfrontend

        Myth_Service=`grep "MythService= " ${mythtv_home}/etc/mythtv.conf | sed -e "s,MythService= ,,"`
        echo "Myth_Service = " ${Myth_Service}

        if [ $Myth_Service -eq 2 ]; then
            ${mythtv_home}/etc/rc.d/mythbackend onestart
        else
#            /usr/pbi/mythtv-`uname -m`/sbin/mythtv

# Let try to merge sbin/mythtv in here
# Check if Xvfb is enabled in config file created by GUI

        XVFB_ENABLE=`grep Xvfb ${mythtv_home}/etc/mythtv.conf | sed -e "s,Xvfb_Enable= ,,"`
        echo $XVFB_ENABLE

# Need to check if Xvfb is running from another plugin and use that display
        RUNNING_DISPLAY_ID=""
        RUNNING_DISPLAY_ID=`pgrep -l -f Xvfb | sed -e "s,^[0-9].* *Xvfb ,," -e "s,-screen .*,,"`

# Get X DISPLAY setting from config file created by GUI

        XDISPLAY=`grep "X11_Display= " ${mythtv_home}/etc/mythtv.conf | sed -e "s,X11_Display= ,,"`
        DISPLAY=${XDISPLAY}
        echo $DISPLAY

# EXAMPLE of VNC using password authentication
# exec x11vnc -noshm -usepw -nevershared -forever -display :1

        if [ $XVFB_ENABLE -eq 1 ]; then

            export DISPLAY=:1

            if [ -n "$RUNNING_DISPLAY_ID" ]; then
                echo "Existing Xvfb Display, using that." ${RUNNING_DISPLAY_ID}
                DISPLAY=${RUNNING_DISPLAY_ID}
                export DISPLAY
            fi

# If Xvfb is not already running, then start it.

            if [ -z `pgrep Xvfb` ]; then
                exec ${mythtv_home}/bin/Xvfb ${DISPLAY} -screen 0 1280x1024x16 &
            fi
    
# If x11vnc is not already running, then start it.
    
            if [ -z `pgrep x11vnc` ]; then
                exec ${mythtv_home}/bin/x11vnc -noshm -nevershared -forever -display :1 &
            fi
    
            if [ -z `pgrep fluxbox` ]; then
# Need to make sure Xvfb has started before starting fluxbox
                sleep 1
                exec ${mythtv_home}/bin/fluxbox -d :1 &
            fi
        fi

            if [ $XVFB_ENABLE -ne 1 ]; then
                killall Xvfb x11vnc fluxbox
                export DISPLAY
                echo "Starting MythTV on DISPLAY:" >> $LOGFILE
                echo $DISPLAY >> $LOGFILE
            fi

# Mythtv-setup

            if [ $Myth_Service -eq 1 ]; then
                export HOME=/usr/pbi/mythtv-`uname -m`/etc/home/mythtv
                exec ${mythtv_home}/bin/mythtv-setup &
            fi

# MythFrontend (NOT ENABLED YET, need both front & back enabled for this)

            if [ $Myth_Service -eq 3 ]; then

# Check if backend is running before starting it here
                if [ -z `pgrep mythbackend` ]; then
                    ${mythtv_home}/etc/rc.d/mythbackend onestart
                fi

                exec ${mythtv_home}/bin/mythfrontend &
            fi

# MythWelcome (NOT ENABLED YET, need both front & back enabled for this)

            if [ $Myth_Service -eq 4 ]; then

# Check if backend is running before starting it here
                if [ -z `pgrep mythbackend` ]; then
                    ${mythtv_home}/etc/rc.d/mythbackend onestart
                fi
                exec ${mythtv_home}/bin/mythwelcome &
            fi
    fi

    return 0
}

mysql_prestop()
{
## Check if we started Xvfb, x11vnc, fluxbox and stop them if not be used by another plugin?
## Make sure we started them also
        echo "Cleaning up child processes"

        if [ ! -z `pgrep mythbackend` ]; then      
            ${mythtv_home}/etc/rc.d/mythbackend onestop
        fi

        if [ ! -z `pgrep mythtv-setup` ]; then      
            pkill mythtv-setup
        fi

        if [ ! -z `pgrep mythwelcome` ]; then      
            pkill mythwelcome
        fi

# Need to make sure we only kill X stuff started by Myth, use pgrep to find only pids started by Myth

            kill -9 `pgrep -f mythtv-amd64/bin/fluxbox` `pgrep -f mythtv-amd64/bin/x11vnc` `pgrep -f mythtv-amd64/bin/Xvfb`

        return 0
}

run_rc_command "$1"
